# Generated by Django 4.2 on 2024-06-26 07:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creators', models.ManyToManyField(related_name='creators', to=settings.AUTH_USER_MODEL)),
                ('participants', models.ManyToManyField(related_name='participants', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField()),
                ('name', models.CharField(max_length=128)),
                ('public_visible', models.BooleanField()),
                ('body', models.CharField(max_length=65536)),
                ('pdf', models.FileField(upload_to='')),
                ('time_limit', models.IntegerField()),
                ('memory_limit', models.IntegerField()),
                ('allow_language', models.BinaryField()),
                ('test_data', models.FileField(upload_to='')),
                ('creator', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(max_length=10)),
                ('code', models.CharField(max_length=65536)),
                ('status', models.CharField(choices=[('AC', 'Accepted'), ('WA', 'Wrong Answer'), ('RTE', 'Runtime Exception'), ('IR', 'Invalid Return'), ('OLE', 'Output Limit Exceeded'), ('MLE', 'Memory Limit Exceeded'), ('TLE', 'Time Limit Exceeded'), ('IE', 'Internal Error'), ('CE', 'Compile Error'), ('AB', 'Aborted')], default='AB', max_length=3)),
                ('total_point', models.IntegerField()),
                ('time', models.IntegerField()),
                ('memory', models.IntegerField()),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.problem')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=32)),
                ('preferred_language', models.CharField(max_length=10)),
                ('last_access_time', models.TimeField()),
                ('last_ip', models.BinaryField()),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tournament_table', models.JSONField()),
                ('creators', models.ManyToManyField(related_name='tournament_creators', to=settings.AUTH_USER_MODEL)),
                ('participant', models.ManyToManyField(related_name='tournament_participant', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TestCaseResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('input_text', models.CharField(max_length=256)),
                ('output_text', models.CharField(max_length=256)),
                ('answer_text', models.CharField(max_length=256)),
                ('time', models.IntegerField()),
                ('memory', models.IntegerField()),
                ('status', models.CharField(choices=[('AC', 'Accepted'), ('WA', 'Wrong Answer'), ('RTE', 'Runtime Exception'), ('IR', 'Invalid Return'), ('OLE', 'Output Limit Exceeded'), ('MLE', 'Memory Limit Exceeded'), ('TLE', 'Time Limit Exceeded'), ('IE', 'Internal Error'), ('CE', 'Compile Error'), ('AB', 'Aborted')], default='AB', max_length=3)),
                ('log', models.CharField(max_length=256)),
                ('submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.submission')),
            ],
        ),
        migrations.CreateModel(
            name='TestCase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence_number', models.IntegerField()),
                ('input_path', models.CharField(max_length=256)),
                ('output_path', models.CharField(max_length=256)),
                ('point', models.IntegerField()),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.problem')),
            ],
        ),
        migrations.CreateModel(
            name='Round',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_match', models.IntegerField()),
                ('first_submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='round_first_submission', to='api.submission')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.group')),
                ('second_submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='round_second_submission', to='api.submission')),
                ('tournament', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.tournament')),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('F', 'First Win'), ('S', 'Second Win'), ('D', 'Draw')], default='D', max_length=1)),
                ('history', models.JSONField()),
                ('first_submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='match_first_submission', to='api.submission')),
                ('round', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.round')),
                ('second_submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='match_second_submission', to='api.submission')),
            ],
        ),
        migrations.CreateModel(
            name='LanguageSpecificTemplates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(max_length=10)),
                ('code', models.CharField(max_length=65536)),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.problem')),
            ],
        ),
    ]
